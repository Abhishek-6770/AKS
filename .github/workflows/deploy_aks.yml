name: Deploy AKS Cluster

on:
  push:
    branches:
      - main
  workflow_dispatch:

    
jobs:
  setup-terraform:
    name: Set Up and Deploy AKS Cluster
    runs-on: self-hosted

    steps:
    - name: Install Node.js (if needed)
      run: |
        if ! command -v node &> /dev/null
        then
          arch -arm64 brew install node
        fi
        
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.4  # Replace with the Terraform version you are using

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # Store your Azure credentials in GitHub Secrets

    - name: Initialize Terraform
      run: terraform init
      
    - name: Import Existing Resource Group
      run: |
        terraform import azurerm_resource_group.k8s /subscriptions/80ea84e8-afce-4851-928a-9e2219724c69/resourceGroups/664-3cbcbfa5-create-an-aks-cluster-in-azure-with-t|| echo "Resource group already managed."
    - name: Import Existing AKS Cluster (if needed)
      run: |
        terraform import azurerm_kubernetes_cluster.k8s /subscriptions/80ea84e8-afce-4851-928a-9e2219724c69/resourceGroups/664-3cbcbfa5-create-an-aks-cluster-in-azure-with-t/providers/Microsoft.ContainerService/managedClusters/k8sguru || echo "AKS cluster already managed."
    - name: Validate Terraform
      run: terraform validate

    - name: Plan Terraform
      run: terraform plan -out aks.tfplan

    - name: Apply Terraform
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve aks.tfplan

    - name: Generate Kubeconfig File
      run: echo "$(terraform output kube_config)" > ./azurek8s

    - name: Remove <<EOT and EOT from azurek8s and regenerate kubeconfig
      run: |
        echo "$(terraform output kube_config)" | sed '1d;$d' > ./azurek8s
        cat ./azurek8s # Optional: View the file to ensure it's correct
    
    - name: Validate Kubeconfig YAML
      run: |
        kubectl get nodes --kubeconfig=./azurek8s || echo "Invalid kubeconfig format."


    - name: Run kubectl get nodes
      run: kubectl get nodes --kubeconfig=./azurek8s

